
version: '2.1'

volumes:
  pg-publisher-data-dir:
  pg-subscriber-data-dir:

services:
  pg-publisher:
    image: 'kartoza/postgis:${TAG:-manual-build}'
    restart: 'always'
    # You can optionally mount to volume, to play with the persistence and
    # observe how the node will behave after restarts.
    volumes:
      - pg-publisher-data-dir:/var/lib/postgresql
      - ./tests:/tests
      - ../utils:/lib/utils
    environment:
      ALLOW_IP_RANGE: '0.0.0.0/0'
      REPLICATION_USER: 'replicator'
      REPLICATION_PASS: 'replicator'
      WAL_LEVEL: 'logical'
    ports:
      - "7777:5432"
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"

  pg-subscriber:
    image: 'kartoza/postgis:${TAG:-manual-build}'
    restart: 'always'
    # You can optionally mount to volume, but we're not able to scale it
    # in that case.
    # The node will always destroy its database and copy from master at
    # runtime
    volumes:
      - pg-subscriber-data-dir:/var/lib/postgresql
      - ./tests:/tests
      - ../utils:/lib/utils
    environment:
      ALLOW_IP_RANGE: '0.0.0.0/0'
      WAL_LEVEL: 'logical'
      REPLICATION_USER: 'replicator'
      REPLICATION_PASS: 'replicator'
    depends_on:
        pg-publisher:
          condition: service_healthy
    # You can expose the port to observe it in your local machine
    # For this sample, it was disabled by default to allow scaling test
    ports:
      - "7776:5432"
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"
