
version: '2.1'

volumes:
  pg-data-dir:
  new-pg-data-dir:

services:
  pg:
    image: 'kartoza/postgis:${TAG:-manual-build}'
    restart: 'always'
    # You can optionally mount to volume, to play with the persistence and
    # observe how the node will behave after restarts.
    volumes:
      - pg-data-dir:/var/lib/postgresql
      - ./tests:/tests
      - ../utils:/lib/utils
    environment:
      DEFAULT_COLLATION: ${DEFAULT_COLLATION:-id_ID.utf8}
      DEFAULT_CTYPE: ${DEFAULT_COLLATION:-id_ID.utf8}
      ALLOW_IP_RANGE: '0.0.0.0/0'
      TEST_CLASS: test_collation.TestCollationDefault
    ports:
      - "7777:5432"
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"

  pg-new:
    image: 'kartoza/postgis:${TAG:-manual-build}'
    restart: 'always'
    # You can optionally mount to volume, to play with the persistence and
    # observe how the node will behave after restarts.
    volumes:
      - new-pg-data-dir:/opt/data/postgis
      - ./tests:/tests
      - ../utils:/lib/utils
    hostname: 'pg-new'
    environment:
      RECREATE_DATADIR: "True"
      PGDATA: /opt/data/postgis
      DEFAULT_COLLATION: ${DEFAULT_COLLATION:-id_ID.utf8}
      DEFAULT_CTYPE: ${DEFAULT_COLLATION:-id_ID.utf8}
      ALLOW_IP_RANGE: '0.0.0.0/0'
      TEST_CLASS: test_collation.TestCollationInitialization
    ports:
      - "7776:5432"
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"
